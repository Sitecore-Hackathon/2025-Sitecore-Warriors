<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/" xmlns:set="http://www.sitecore.net/xmlconfig/set/" xmlns:role="http://www.sitecore.net/xmlconfig/role/">
  <sitecore role:require="ContentManagement or ContentDelivery or Standalone">

    <services>
      <register
        serviceType="Sitecore.Framework.Messaging.Rebus.Gateway.Config.IRawBatchSink, Sitecore.Framework.Messaging.Rebus"
        implementationType="Sitecore.Messaging.GatewayClient.DefaultGatewaySink, Sitecore.Messaging.GatewayClient.Rest"
        lifetime="Singleton" />

      <register
        serviceType="Sitecore.Messaging.GatewayClient.IGatewayQueueClientRegistry, Sitecore.Messaging.GatewayClient.Rest"
        implementationType="Sitecore.Messaging.GatewayClient.GatewayQueueClientRegistry, Sitecore.Messaging.GatewayClient.Rest"
        lifetime="Singleton" />

      <register
        serviceType="Sitecore.Messaging.GatewayClient.WebClients.IWebClientRegistry, Sitecore.Messaging.GatewayClient.Rest"
        implementationType="Sitecore.Messaging.GatewayClient.WebClients.WebClientRegistry, Sitecore.Messaging.GatewayClient.Rest"
        lifetime="Singleton" />

            <register
                serviceType="Sitecore.Messaging.GatewayClient.GatewayConnectionValidator, Sitecore.Messaging.GatewayClient.Rest"
                implementationType="Sitecore.Messaging.GatewayClient.GatewayConnectionValidator, Sitecore.Messaging.GatewayClient.Rest"
                lifetime="Singleton" />

            <configurator type="Sitecore.Messaging.GatewayClient.GatewayClientConfigurator, Sitecore.Messaging.GatewayClient" />
        </services>
        
        <events>
            <event name="messaging:allBusesInitialized">
                <!-- Starts a background process that will validate the health of all HTTP Gateway connections to the Gateway server, and log
                    successes and failures for each queue.  It will keep running, and checking failed connections untill all are healthy, or the
                    max duration setting is reached.
                    
                    The validation first occurs 30 seconds after startup, and then after each iteration of queue connections, an
                    exponential delay is observered before checking for unhealthy connections.
                    -->
                <handler type="Sitecore.Messaging.GatewayClient.InitializeGatewayValidation, Sitecore.Messaging.GatewayClient" method="HandleAllBusesInitialized" resolve="true" />
            </event>
        </events>

        <settings>
            <!-- Defines the delay after app startup after which the validation will occur. -->
            <setting name="Messaging.GatewayClient.ConnectionValidation.StartDelaySeconds" value="15"></setting>

            <!-- The validation is performed on all unhealthy gateway connections on each iteration.  This value controls
                the delay duraction between each of these iterations, according the formula : iterationCount ^ 2 * seed-->
            <setting name="Messaging.GatewayClient.ConnectionValidation.ExponentialDelaySeedSeconds" value="30"></setting>
            
            <!-- Defines the maximum duration the validation task will run for, typically if there are unhealthy connections. -->
            <setting name="Messaging.GatewayClient.ConnectionValidation.RunDurationHours" value="24"></setting>

            <!-- When true, the validation task will complete when all connections are first identfied as healthy. -->
            <setting name="Messaging.GatewayClient.ConnectionValidation.FinishWhenNoErrors" value="true"></setting>
        </settings> 

        <Messaging>

      <GatewayClient>

        <!-- TRANSFER RETRIES
          
               The Gateway Client bus transfers messages to a Gateway Server bus over HTTP.  If the connection
               to the server is not available, messages will be added back in to the client queue for attempted
               transfer later.  This retrying is determined by an exponential function with the parameters
               you see below.
               
               If you require exponential transfer retries with different parameters, specify new
               settings. 
               
               Formula is (in MS Excel form):
                    retry_delay_period =FLOOR(MIN(h + FLOOR(((2^i) - 1) * RANDBETWEEN(FLOOR(j*0.8,1), FLOOR(j*1.2,1)),1), k), 1)
                    
                    where
                        h is minBackoff
                        i is the index of the current retry
                        j is deltaBackoff
                        k is maxBackoff
                -->
        <TransferRetrySettings>
          <!-- Default.HighTolerance yields the following retry intervals (in Secs):
                        88.76
                        232.29
                        605.56
                        1386.68
                        2390.47
                        3600.00
                        3600.00
                        3600.00
                        3600.00
                        3600.00
                        3600.00
                        3600.00
                        3600.00
                        3600.00
                        3600.00
                        3600.00
                    -->
          <Default.HighTolerance maxAttempts="16" minBackoff="00:00:00" maxBackoff="01:00:00" deltaBackoff="00:01:30" />

          <!-- Default.LowTolerance yields the following retry intervals (in Secs):
                        62.50
                        204.51
                        449.55
                        1025.01
                        1921.35
                        3287.72
                        3600.00
                    -->
                    <Default.LowTolerance maxAttempts="7" minBackoff="00:00:00" maxBackoff="01:00:00" deltaBackoff="00:01:00" />

                    <!-- Default.NoRetry : No retries are permitted. -->
                    <Default.NoRetry maxAttempts="1" minBackoff="00:00:00" maxBackoff="01:00:00" deltaBackoff="00:01:00" />
                </TransferRetrySettings>

        <!-- GATEWAY CLIENT MESSAGE BUSES 
          
                    Gateway Client buses require some additional properties:
                  
                       - gatewayServiceBaseAddress : 
                       - webClient : 
                       - deliveryRetry :
                       
                  -->
        <Rebus>
          <!-- Define Gateway Client messages buses here -->
        </Rebus>

        <!-- WEB CLIENT REGISTRY 
                 -->
        <WebClientRegistry>
          <Clients>
            <!-- Define Web Clients here.  Currently unsecured and secured clients are supported.
          
                               To enable unsecured Gateway message transfered, the Gateway Service must also be configured
                               as unsecured. -->
            <Default.Unsecure>
              <Type>Sitecore.Messaging.GatewayClient.WebClients.UnsecureWebClientFactory, Sitecore.Messaging.GatewayClient.Rest</Type>
              <Options>
                <RequestTimeout>0:00:15</RequestTimeout>
              </Options>
            </Default.Unsecure>
          </Clients>
        </WebClientRegistry>

      </GatewayClient>

    </Messaging>

  </sitecore>
</configuration>